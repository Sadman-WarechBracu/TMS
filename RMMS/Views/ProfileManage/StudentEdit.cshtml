@model RMMS.Model.ProfileManage.StudentEditModel
@{
    ViewBag.Title = "StudentEdit";
    Layout = "~/Views/Shared/_AfterLayout.cshtml";
}

<br />
<br />
@using (Html.BeginForm("TeacherEdit"))
{
    if (!string.IsNullOrEmpty(ViewBag.Error))
    {
        <div class="alert alert-dismissible alert-danger">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>Oh snap!</strong><br /> @ViewBag.Error
        </div>
    }
    <div class="row">
        <div class="col-md-2"></div>
        <div class="col-md-8 well">

            <fieldset>
                <legend>Edit</legend>
                <div class="form-group">
                    <label for="inputEmail" class="col-lg-2 control-label">User Name</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @value = "'" + Model.UserName + "'" })
                        @Html.ValidationMessageFor(m => m.UserName)
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail" class="col-lg-2 control-label">User FullName</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @value = "'" + Model.Name + "'" })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail" class="col-lg-2 control-label">Email</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @value = "'" + Model.Email + "'" })
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail" class="col-lg-2 control-label">Location</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => m.Location, new { @class = "form-control", @value = "'" + Model.Location + "'" })
                        @Html.ValidationMessageFor(m => m.Location)
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail" class="col-lg-2 control-label">Class</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => m.Class, new { @class = "form-control", @value = "'" + Model.Class + "'" })
                        @Html.ValidationMessageFor(m => m.Class)
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputEmail" class="col-lg-2 control-label">DOB</label>
                    <div class="col-lg-10">
                        @Html.TextBoxFor(m => m.DOB, new { @class = "form-control", @value = "'" + Model.DOB + "'", @placeholder="dd-MM-yyyy" })
                        @Html.ValidationMessageFor(m => m.DOB)
                    </div>
                </div>


                <div class="form-group">
                    <label for="inputEmail" class="col-lg-2 control-label">Change Password?</label>
                    <div class="col-lg-10">
                        <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#demo">Change Password</button>
                    </div>
                </div>
                <div id="demo" class="collapse">
                    <div class="form-group">
                        <label for="inputPassword" class="col-lg-2 control-label">Old Password</label>
                        <div class="col-lg-10">
                            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", @value = "" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="inputPassword" class="col-lg-2 control-label">New Password</label>
                        <div class="col-lg-10">
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @value = "" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="inputPassword" class="col-lg-2 control-label">Confirm password</label>
                        <div class="col-lg-10">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @value = "" })
                        </div>
                    </div>
                </div>







                <div class="form-group">
                    <div class="col-lg-10 col-lg-offset-2">
                        <button type="reset" class="btn btn-default">Cancel</button>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </fieldset>


        </div>
        <div class="col-md-2"></div>
    </div>
}

